#!/usr/bin/env python3
import argparse
import logging

from bench_common import get_fs_configs, add_common_args
from plot import plot_micro_st, plot_micro_mt, plot_micro_meta
from runner import Runner
from utils import root_dir, get_timestamp

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger("bench_micro")


def run_micro(benchmark, build_type, fs_names):
    from init import init
    init(configure=True)

    cmake_target = f"micro_{benchmark}"
    result_dir = root_dir / "results" / f"bench_{cmake_target}" / get_timestamp()

    for fs in get_fs_configs(fs_names):
        runner = Runner(cmake_target, result_dir=result_dir / fs.name, build_type=build_type)
        runner.build()
        runner.run(load_ulayfs=fs.load_ulayfs, pmem_path=fs.pmem_path)

    return result_dir


def main(benchmark, result_dir, **kwargs):
    if result_dir is None:
        result_dir = run_micro(benchmark, **kwargs)

    if benchmark == "st":
        plot_micro_st(result_dir)
    elif benchmark == "mt":
        plot_micro_mt(result_dir)
    elif benchmark == "meta":
        plot_micro_meta(result_dir)

    logger.info(f"Results saved to {result_dir}")


if __name__ == "__main__":
    argparser = argparse.ArgumentParser()
    argparser.add_argument("benchmark", choices=["st", "mt", "meta"])
    add_common_args(argparser)
    args = argparser.parse_args()
    main(**vars(args))
